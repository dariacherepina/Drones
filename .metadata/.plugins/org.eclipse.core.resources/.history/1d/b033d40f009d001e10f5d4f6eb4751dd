package drones.groupe_12.fra.uas;
import java.net.HttpURLConnection;
import java.net.SocketTimeoutException;
import java.net.URL;
import java.io.BufferedReader;
import java.io.InputStreamReader;
//import java.net.MalformedURLException;

import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONTokener;

public class main {
	
	public static void test(String input) {
		// Create a JSONObject from the input
		JSONObject wholeFile = new JSONObject(input);
		// Get the JSONArray from the JSONObject
		JSONArray jsonFile = wholeFile.getJSONArray("results");
		// Loop through the JSONArray
		for (int i = 0; i < jsonFile.length(); i++) {
			// Get the JSONObject at index i
			JSONObject o = jsonFile.getJSONObject(i);
			// Check if the JSONObject has "carriage_type" and "carriage_weight"
			if(o.has("carriage_type") && o.has("carriage_weight")){
				// Get the values of "carriage_type" and "carriage_weight"
				String a = o.getString("carriage_type");
				int b = o.getInt("carriage_weight");
				int id = o.getInt("id");
				// Print the values
				System.out.println("Drone " + id + ": carriage type " + a + " (weight: " + b + "g)");
			}
		}
		
	}

	// Method to format JSON
	public static String formatJson(String input) {
		// Define the number of spaces for indentation
		final int indentSpaces = 4;
		// Create a JSONTokener from the input
		Object json = new JSONTokener(input).nextValue();

		// Check if the JSON is a JSONObject or a JSONArray
		if (json instanceof JSONObject) {
			JSONObject o = (JSONObject) json;
			
			// Return the JSONObject as a string with indentation
			return o.toString(indentSpaces);
		} else if (json instanceof JSONArray) {
			// Return the JSONArray as a string with indentation
			return ((JSONArray) json).toString(indentSpaces);
		} else {
			// Throw an exception if the input is not a valid JSON
			throw new IllegalArgumentException("Input string is not a valid JSON");
		}
	}
	public static void main(String[] args){
		APIConnection apiClient = new APIConnection();
		String dronesResponse;
		String droneTypesResponse;
		String droneDynamicsResponse;
		dronesResponse = apiClient.getResponse("drones/?format=json&limit=20&offset=0");
		System.out.println("Drones: " + dronesResponse);
		droneTypesResponse = apiClient.getResponse("dronetypes/?format=json&limit=20&offset=0");
		System.out.println("Drone Types: " + droneTypesResponse);
		droneDynamicsResponse = apiClient.getResponse("dronedynamics/?format=json&limit=20&offset=0");
		System.out.println("Drone Types: " + droneDynamicsResponse);
		test(dronesResponse.toString());
		
        
	}
}
	
		